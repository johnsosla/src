<apex:component controller="ECO_PMD_EarnedValueChart_Controller">
    <apex:attribute name="projectId" description="Project Number" type="String" required="true" />
    <style>
    .warning{
      color: red !important;
      text-align: center;
      font-size: x-large;
      font-weight: normal;
    }
    </style>
    <div ng-controller="dashEarnedValueCPIController"  class="panel panel-default dashbox">
        <div class="panel-heading">
            {!$Label.ECO_PMD_CPI_TITLE} <span ng-Show="SFDCDATA.nodata"><b>{!$Label.ECO_PMD_NO_DATA}</b></span>
        </div>

        <table class="pmd-kpi" width="100%">
          <tr>
            <td>
              <div
                   ng-class="{'warning' : SFDCDATA.costVariance < 0, 'pmd-value' : SFDCDATA.costVariance >= 0}" 
                   ng-bind="(SFDCDATA.costVariance/1000 | number:1) + 'k'"/>
              <div class="pmd-label">{!$Label.ECO_PMD_CPI_COSTVAR_KPI}</div>
            </td>
            <td>
              <div 
                   ng-class="{'warning': SFDCDATA.cpi < .95 || SFDCDATA.cpi > 1.4, 'pmd-value' : SFDCDATA.cpi >= .95 && SFDCDATA.cpi <= 1.4}"
                   ng-bind="SFDCDATA.cpi" />
              <div class="pmd-label">{!$Label.ECO_PMD_CPI_CPI_KPI}</div>
            </td>
          </tr>
        </table>

        <div class="panel-body" >                
            <div id="example">
                <div class="demo-section k-content">
                    <div id="chartCPI" width='100%'></div>
                </div>        
            </div>
        </div>
        <c:ECO_PMD_PanelFooter panelID="CPI">{!$Label.ECO_PMD_CPI_MOREINFO_DETAILS}</c:ECO_PMD_PanelFooter>
    </div>

    <script>
      (function(){
          angular
          .module("ecopmd")
          .controller("dashEarnedValueCPIController",dashEarnedValueCPIController);

          function dashEarnedValueCPIController($scope,$locale){
            $scope.refreshData = refreshData;
            loadData($scope);
            $scope.isCollapsed = true;

            function refreshData(){
                this.SFDCDATA=[];
                loadData(this); // this = $scope
            }
            function loadData($scope){
                ECO_PMD_EarnedValueChart_Controller.ProjectSnapshot(
                    '{!projectId}',
                    function(result, event){
                      if(event.status) {
                        $scope.$apply(function(){
                          result.earnedValueData = mapSFDCResults(result.earnedValueData);
                          result.costVariance = (result.mostRecent.EarnedValueLastCommitted == 0)?0:(result.mostRecent.EarnedValueLastCommitted - result.mostRecent.ActualITD).toFixed(2);
                          result.cpi = result.mostRecent.CPI.toFixed(2);
                          
                          $scope.SFDCDATA = result;

                          var chart = createChart("#chartCPI");
                          //chart.options.valueAxis.title.text = $scope.SFDCDATA.currencyCode + " k";
                          chart.options.categoryAxis.labels.step = (1 + Math.floor(result.earnedValueData.length/24));
                          chart.refresh();
                          $(window).resize(function(){chart.refresh();});
                        });
                      }
                });
                /*
                ECO_PMD_EarnedValueCPIChart_Controller.ProjectSnapshot(
                  '{!projectId}',
                  function(result, event){
                    if(event.status) {
                      //console.log(result);
                      $scope.$apply(function(){
                          result.earnedValueData = mapSFDCResults(result.earnedValueData);
                          $scope.SFDCDATA = result;
                          var chart = createChart("#chartCPI");
                          chart.options.categoryAxis.labels.step = (1 + Math.floor(result.earnedValueData.length/24));
                          chart.refresh();
                          $(window).resize(function(){chart.refresh();});
                      });
                    }
                  });
                */
            }
            function mapSFDCResults(result) {
              // assumes result is an array of objects
              var data =[];
              var cpiLatest;
              angular.forEach(result, function (val, key) {                
                val['kendoCategory'] = val['FiscalMonth'] + '|' + val['ThruWeekending'];
                this.push(val);
              },data);
              return data; // data.length>6?data.slice(-6):data;
            }
            function createChart(elSpec) {
                return $(elSpec).kendoChart({
                        
                    resizable: true,
                    chartArea: {
                        height: 250
                    },
                    dataSource: {
                        data: $scope.SFDCDATA.earnedValueData
                    },
                    legend: {
                        position: "bottom"
                    },
                    series: [{       
                        field: "CPI",
                        type: "line",
                        name: "{!$Label.ECO_PMD_CPI_CPI_KPI}",
                        color: "#99CCFF",
                        axis: "CPI"                   
                    }],
                    valueAxes: [{
                        name: "CPI",
                        min: 0,
                        //title: { text: $scope.SFDCDATA.currencyCode },
                        labels: {template : "#= value#"}
                    }],
                    categoryAxis: {
                        field: "kendoCategory",
                        axisCrossingValues: [0,999999],
                        labels: {
                            rotation: 300
                            ,template: '#= kendo.formatSnapshotDate(value).month #'
                        }
                    },                
                    tooltip: {
                      visible: true,
                      template: "#= series.name #: #= kendo.formatNum(value) # [#= kendo.formatSnapshotDate(category).date #]"
                    }
                }).data("kendoChart");
            }
          }        
        })();  
    </script>
</apex:component>