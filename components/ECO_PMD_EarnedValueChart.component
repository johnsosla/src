<apex:component controller="ECO_PMD_EarnedValueChart_Controller">
    <apex:attribute name="projectId" description="Project Number" type="String" required="true" />
    
    <div  ng-controller="dashEarnedValueController"  class="panel panel-default dashbox">
        <div class="panel-heading">
            <a href="apex/eco_pmd_earnedvaluedetail?id={!projectId}">{!$Label.ECO_PMD_EARNEDVALUE_TITLE}</a>
        </div>
        <div class="text-center" ng-hide="isLoaded">
            <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>
        </div>
        <div ng-show="isLoaded">
          <table class="pmd-kpi" width="100%">
            <tr>
              <td>
                <div class="pmd-value"
                     ng-class="{'negative': SFDCDATA.mostRecent.PlannedITD < 0}" 
                     ng-bind="(SFDCDATA.mostRecent.PlannedITD/1000 | number:1) + 'k'"/>
                <div class="pmd-label">{!$Label.ECO_PMD_EARNEDVALUE_PLANNED}</div>
              </td>
              <td>
                <div class="pmd-value"
                     ng-class="{'negative': SFDCDATA.mostRecent.ActualITD < 0}" 
                     ng-bind="(SFDCDATA.mostRecent.ActualITD/1000 | number:1) + 'k'" />
                <div class="pmd-label">{!$Label.ECO_PMD_EARNEDVALUE_ACTUAL}</div>
              </td>
              <td>
                <div class="pmd-value"
                     ng-class="{'negative': SFDCDATA.mostRecent.EarnedValueLastCommitted < 0}"
                     ng-bind="(SFDCDATA.mostRecent.EarnedValueLastCommitted/1000 | number:1) + 'k'" />
                <div class="pmd-label">{!$Label.ECO_PMD_EARNEDVALUE_EARNED}</div>
              </td>
            </tr>
          </table>
        </div>

        <div class="panel-body">
            <div id="example">
                <div class="demo-section k-content">
                    <div id="chartEV" width='100%'></div>
                </div>
            </div>
        </div>
        <c:ECO_PMD_PanelFooter panelID="EV">
           <span id="ECO_PMD_EARNEDVALUE_MOREINFO_DETAILS">
              <script>
                $('#ECO_PMD_EARNEDVALUE_MOREINFO_DETAILS').html("{!$Label.ECO_PMD_EARNEDVALUE_MOREINFO_DETAILS}").append("{!$Label.ECO_PMD_EARNEDVALUE_MOREINFO_DETAILS1}");
              </script> 
            </span>
        </c:ECO_PMD_PanelFooter>            
    </div>
   
    <script>
      (function(){
          angular
          .module("ecopmd")
          .controller("dashEarnedValueController",dashEarnedValueController);

          function dashEarnedValueController($scope,$locale){
            $scope.refreshData = refreshData;
            $scope.isLoaded = false;
            $scope.isCollapsed = true;
            loadData($scope);
                     
            function refreshData(){
                this.SFDCDATA=[];
                loadData(this); // this = $scope
            }
            function createChart(elSpec) {
                return $(elSpec).kendoChart({
                        
                    resizable: true,
                    chartArea: {
                        height: 250
                    },
                    dataSource: {
                        data: $scope.SFDCDATA.earnedValueData
                    },
                    legend: {
                        position: "bottom"
                    },
                    seriesDefaults: {
                        type: "line",
                        stack: false
                    },
                     series: [{                        
                        type: "line",
                        field: "PlannedITD",
                        name: "{!$Label.ECO_PMD_EARNEDVALUE_PLANNED_VAL}",
                        color: "#0066ad",
                        axis: "ITD",
                        markers:{
                          visible:true,
                          type:'square'
                        }
                    }, {
                        type: "line",
                        field: "EstimatedITD",
                        name: "{!$Label.ECO_PMD_EARNEDVALUE_ESTIMATED_VAL}",
                        color: "#cad7e9",
                        axis: "ITD",
                        markers:{
                          visible:true,
                          type:'triangle'
                        }
                    }, {
                        type: "line",
                        field: "EarnedITD",
                        name: "{!$Label.ECO_PMD_EARNEDVALUE_EARNED_VAL}",
                        color: "#009900",
                        axis: "ITD",
                        markers:{
                          visible:true,
                          type:'circle'
                        }
                    }, {
                        type: "line",
                        field: "ActualITD",
                        name: "{!$Label.ECO_PMD_EARNEDVALUE_ACTUAL_VAL}",
                        color: "#990000",
                        axis: "ITD",
                        markers:{
                          visible:true,
                          type:'cross'
                        }
                    }],
                    // TODO -- use the correct language label
                    // TODO -- Use the correct currency
                    // TODO -- align to earnedvalueflyoutcontroller and earnedvalueflyoutcomponent
                    /*       "Planned", "Estimate", "Actual", "Earned Value"
                    colors: ['#0066ad', '#cad7e9', '#990000', '#009900'],  
                    series: {
                        0 : { pointShape : 'square' }, //planned
                        1 : { pointShape : 'triangle' }, //estimate
                        2 : { pointShape : 'circle' }, // actual
                        3 : { pointShape : 'diamond' } // EV
                    }*/
                    valueAxes: [{
                        name: "ITD",
                        title: { text: "k" },
                        labels: {template : "#=kendo.formatK(value)#"}
                    }],
                    categoryAxis: {
                        field: "kendoCategory",
                        axisCrossingValues: [0,999999],
                        labels: {
                            rotation: 300
                            ,template: '#= kendo.formatSnapshotDate(value).month #'
                        }
                    },                
                    tooltip: {
                        visible: true,
                        template: "#= series.name #: #= kendo.formatNum(value) # [#= kendo.formatSnapshotDate(category).date #]"
                    },
                    dataBound: onDB
                }).data("kendoChart");
            }
            // TODO -- can marker types work?  http://docs.telerik.com/kendo-ui/dataviz/chart/how-to/grouped-line-chart-different-markers
            function onDB(e) {
              var chart = e.sender,
                  options = chart.options,
                  series = options.series;

                  //series[0].markers.type = "square";
                  //series[1].markers.type = "triangle";
                  //series[2].markers.type = "circle";
                  //series[3].markers.type = "cross";
            }
            function loadData($scope){
                ECO_PMD_EarnedValueChart_Controller.ProjectSnapshot(
                  '{!projectId}',
                  function(result, event){
                    if(event.status) {
                      $scope.$apply(function(){
                        result.earnedValueData = mapSFDCResults(result.earnedValueData)
                        $scope.SFDCDATA = result;
                        $scope.isLoaded = true;
                        var chart = createChart("#chartEV");
                        chart.options.valueAxis.title.text = $scope.SFDCDATA.currencyCode;
                        chart.options.categoryAxis.labels.step = (1 + Math.floor(result.earnedValueData.length/24));
                        chart.refresh();
                        $(window).resize(function(){chart.refresh();});
                      });
                    }
                  });
            }
            function mapSFDCResults(result) {
              // assumes result is an array of objects
              var data =[];
              angular.forEach(result, function (val, key) {                
                val['kendoCategory'] = val['FiscalMonth'] + '|' + val['ThruWeekending'];
                this.push(val);
              },data);
              return data; // data.length>6?data.slice(-6):data;
            }
          }
      })();
    </script>


</apex:component>