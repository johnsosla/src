<apex:component controller="ECO_PMD_WorkingCapitalChart_Controller">
    <apex:attribute name="projectId" description="Project Number" type="String" required="true" /> 
    
    <div ng-controller="dashWorkingCapitalController" class="panel panel-default dashbox">
        <div class="panel-heading">
              {!$Label.ECO_PMD_WORKING_CAP_TITLE}<span ng-Show="SFDCDATA.nodata"><b>{!$Label.ECO_PMD_NO_DATA}</b></span>
        </div>
        <div class="text-center" ng-hide="isLoaded">
            <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>
        </div>
        <div ng-show="isLoaded">
          <table class="pmd-kpi" width="100%">
            <tr>
              <td>
                <div class="pmd-value"
                     ng-class="{'negative': SFDCDATA.ttlARBilled < 0}"
                     ng-bind="(SFDCDATA.ttlARBilled/1000 | number:0) + 'k'"/>
                <div class="pmd-label">{!$Label.ECO_PMD_WORKING_CAP_AR_CUR}</div>
              </td>
              <td>
                <div class="pmd-value"
                     ng-class="{'negative': SFDCDATA.ttlUnbilled < 0}"
                     ng-bind="(SFDCDATA.ttlUnbilled/1000 | number:0) + 'k'"/>
                <div class="pmd-label">{!$Label.ECO_PMD_WORKING_CAP_UNBILLED_CUR}</div>
              </td>
              <td>
                <div class="pmd-value"
                     ng-class="{'negative': SFDCDATA.ttlDays < 0}" 
                      ng-bind="SFDCDATA.ttlDays | number:0"/>
                <div class="pmd-label">{!$Label.ECO_PMD_WORKING_CAP_DSO}</div>
              </td>
            </tr>
          </table>
        </div>
        <div class="panel-body" >
            <div class="k-content">
                <div id="chartWC" width="100%"></div>
            </div>
        </div>
        <c:ECO_PMD_PanelFooter panelID="WrkCap">
                {!$Label.ECO_PMD_WORKING_CAP_MOREINFO_DETAILS}
        </c:ECO_PMD_PanelFooter>
    </div>

<script>
    (function(){   
         angular
        .module("ecopmd")
        .controller("dashWorkingCapitalController",dashWorkingCapitalController);

        function dashWorkingCapitalController($scope,$locale){
            
          $scope.isCollapsed = true;
          $scope.isLoaded = false;

          loadData($scope);
          
          function createChart(elSpec) {
            return $(elSpec).kendoChart({
                    
                resizable: true,
                chartArea: {
                    height: 250
                },
                dataSource: {
                    data:$scope.SFDCDATA.workingCapitalData
                },
                legend: {
                    position: "bottom"
                },
                    seriesDefaults: {
                    type: "line",
                    stack: true
                },
                series: [{
                    type: "column",
                    field: "UnbilledTotal__c",
                    name: "{!$Label.ECO_PMD_WORKING_CAP_UNBILLED}",
                    color: "#FF9933",
                    axis: "USD"
                }, {                        
                    type: "column",
                    field: "ARTotal__c",
                    name: "{!$Label.ECO_PMD_WORKING_CAP_AR}",
                    color: "#99CCFF",
                     axis: "USD"
                }, {
                    type: "line",
                    field: "DSO__c",
                    name: "{!$Label.ECO_PMD_WORKING_CAP_DSO}",
                    color: "#99CC00",
                    axis: "DYS",
                    markers: {
                    type: function(e){
                      return (e.dataItem.isHistorical?"cross":"circle");}
                    }
                }],
                valueAxes: [{
                    name: "USD",
                    title: { text: "k" },
                    labels: {template : "#=kendo.formatK(value)#"}
                },{
                    name: "DYS",
                    title: { text: "Days" }//,
                    //min: 0,
                    //max: 100                   
                }],
                categoryAxis: {
                    field: "kendoCategory",
                    axisCrossingValues: [0,999999],
                    labels: {
                        rotation: 300//270
                        ,template: '#= kendo.formatSnapshotDate(value).month #'
                    }
                },
                tooltip: {
                    visible: true,
                    //template: "#= kendo.debug(dataItem, series, value, category)#"
                    template: "#= series.name #: #= kendo.formatNum(value) # [#= kendo.formatSnapshotDate(category).date #]"
                }
            }).data("kendoChart");
          }
        
          function loadData($scope){
            ECO_PMD_WorkingCapitalChart_Controller.ProjectSnapshot(
              '{!projectId}',
              function(result, event){
                if(event.status) {
                 //console.log(result);
                  $scope.$apply(function(){
                    $scope.SFDCDATA = result ;
                    $scope.SFDCDATA.workingCapitalData = mapSFDCResults(result.workingCapitalData) ;
                    $scope.isLoaded = true;
                    var chart = createChart("#chartWC");                   
                    chart.options.valueAxis[0].title.text = $scope.SFDCDATA.currencyCode;
                    chart.options.categoryAxis.labels.step = (1 + Math.floor(result.workingCapitalData.length/24));
                    chart.refresh();
                    $(window).resize(function(){chart.refresh()});
                  });
                }
              });
          }

          function mapSFDCResults(result) {
            // assumes result is an array of objects
            var data =[];
            angular.forEach(result, function (val, key) {                
              val['kendoCategory'] = val.SnapshotFiscalMonth__c + '|' + val['SnapshotDate__c'];
              var isHistorical = false;
              try {
                var createdHowManyDaysAfterSnapshotDate = ((val['CreatedDate'] - val['SnapshotDate__c'])/86400000); //(24*60*60*1000)
                isHistorical = ( createdHowManyDaysAfterSnapshotDate > 45 ); // 31+13
              } finally {
                val['isHistorical'] = isHistorical;
              }
              this.push(val);
            },data);
            return data.length>6?data.slice(-6):data;
          }
        }
    })();
</script>

</apex:component>